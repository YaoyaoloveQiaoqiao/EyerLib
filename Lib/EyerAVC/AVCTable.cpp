#include "AVCTable.hpp"

namespace Eyer
{
    int AVCTable::CoeffTokenTableLength[3][4][17] =
        {
            {
                { 1, 6, 8, 9,10,11,13,13,13,14,14,15,15,16,16,16,16},
                { 0, 2, 6, 8, 9,10,11,13,13,14,14,15,15,15,16,16,16},
                { 0, 0, 3, 7, 8, 9,10,11,13,13,14,14,15,15,16,16,16},
                { 0, 0, 0, 5, 6, 7, 8, 9,10,11,13,14,14,15,15,16,16},
            },
            {
                { 2, 6, 6, 7, 8, 8, 9,11,11,12,12,12,13,13,13,14,14},
                { 0, 2, 5, 6, 6, 7, 8, 9,11,11,12,12,13,13,14,14,14},
                { 0, 0, 3, 6, 6, 7, 8, 9,11,11,12,12,13,13,13,14,14},
                { 0, 0, 0, 4, 4, 5, 6, 6, 7, 9,11,11,12,13,13,13,14},
            },
            {
                { 4, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9, 9, 9,10,10,10,10},
                { 0, 4, 5, 5, 5, 5, 6, 6, 7, 8, 8, 9, 9, 9,10,10,10},
                { 0, 0, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9,10,10,10},
                { 0, 0, 0, 4, 4, 4, 4, 4, 5, 6, 7, 8, 8, 9,10,10,10},
            },
        };

    int AVCTable::CoeffTokenTableCode[3][4][17] =
        {
            {
                { 1, 5, 7, 7, 7, 7,15,11, 8,15,11,15,11,15,11, 7,4},
                { 0, 1, 4, 6, 6, 6, 6,14,10,14,10,14,10, 1,14,10,6},
                { 0, 0, 1, 5, 5, 5, 5, 5,13, 9,13, 9,13, 9,13, 9,5},
                { 0, 0, 0, 3, 3, 4, 4, 4, 4, 4,12,12, 8,12, 8,12,8},
            },
            {
                { 3,11, 7, 7, 7, 4, 7,15,11,15,11, 8,15,11, 7, 9,7},
                { 0, 2, 7,10, 6, 6, 6, 6,14,10,14,10,14,10,11, 8,6},
                { 0, 0, 3, 9, 5, 5, 5, 5,13, 9,13, 9,13, 9, 6,10,5},
                { 0, 0, 0, 5, 4, 6, 8, 4, 4, 4,12, 8,12,12, 8, 1,4},
            },
            {
                {15,15,11, 8,15,11, 9, 8,15,11,15,11, 8,13, 9, 5,1},
                { 0,14,15,12,10, 8,14,10,14,14,10,14,10, 7,12, 8,4},
                { 0, 0,13,14,11, 9,13, 9,13,10,13, 9,13, 9,11, 7,3},
                { 0, 0, 0,12,11,10, 9, 8,13,12,12,12, 8,12,10, 6,2},
            },
        };


    int AVCTable::SearchForValueIn2DTable(EyerBitStream & bs, int &value1, int &value2, int &code, int *lengthTable, int *codeTable, int tableWidth, int tableHeight)
    {
        for(int yIdx = 0; yIdx < tableHeight; yIdx++) {
            for(int xIdx = 0; xIdx < tableWidth; xIdx++) {
                int codeLen = lengthTable[xIdx];
                if (codeLen == 0) {
                    continue;
                }

                code = codeTable[xIdx];

                if(bs.bs_peek_u(codeLen) == code){
                    value1 = xIdx;
                    value2 = yIdx;
                    bs.bs_skip_u(codeLen);

                    // EyerLog("=================== value1: %d, value2: %d\n", xIdx, yIdx);
                    goto END;
                }
            }
            lengthTable += tableWidth;
            codeTable += tableWidth;
        }

        EyerLog("Not Found Error\n");
    END:
        return 0;
    }
}